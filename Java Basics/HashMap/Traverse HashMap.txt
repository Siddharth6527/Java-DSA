 ########## Traverse Through a HashMap in Java #############
 HashMap stores the data in (key, value) pairs, and you can access them by an index of another type.
 HashMap class implements Map interface which allows us to store key.
 HashMap is a part of java collections framework been up since Java 1.2.
 It internally uses hashing technique which is pretty fast.

 Different Ways of Traversal:
 We can iterate over mapping that is key and value pairs a was listed below:

 Methods:
 1. Using an Iterator
 2. Using enhanced for Loop (for-each loop)
 3. Using forEach() method 

 Method 1: Using an Iterator
 Iterator is an interface in java.util.package which is used to iterate through a collection.
 As such there is nothing special to discuss iterators so do we will be proposing out methods of Iterator interface been used to traverse over HashMap.

 1. hm.entrySet(): It is used to retrieve all the key-value paris called Map.Entries and stores internally into a set.

 2. hm.entrySet().iterator(): returns an iterator that acts as cursor and points at the first element of the set and move on till the end.

 3. hmIterator.hasNext(): it checks for the next element in the set and returns a boolean.

 4. hmIterator.next(): returns the next element (Map.Entry) from the set.

 5. mapElement.getKey(): returns the key of the associated Map.Entry

 6. mapElement.getValue(): returns the value of the associated Map.Entry

// refer iteratorMethods.java for code

 Method 2: Using for-each loop
// refer 

 Method 3: Using forEach() method
 forEach() is a method of HashMap that is introduced in java 8.
 It is used to iterate through the hashmap and also reduces the number of lines of code as propossed below as follows:

// refer 

 